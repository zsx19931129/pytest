F test_report.py::TestCase::()::test_eq_set
 self = <test_report.TestCase object at 0x10a837610>
 
     def test_eq_set(self):
 >       assert set([0, 10, 11, 12]) == set([0, 20, 21])
 E       assert set([0, 10, 11, 12]) == set([0, 20, 21])
 E         Extra items in the left set:
 E         10
 E         11
 E         12
 E         Extra items in the right set:
 E         20
 E         21
 E         Use -v to get the full diff
 
 test_report.py:5: AssertionError
F test_report.py::TestCase::()::test_eq_dict
 self = <test_report.TestCase object at 0x10a87fb50>
 
     def test_eq_dict(self):
 >       assert {'a': 0, 'b': 1, 'c': 0} == {'a': 0, 'b': 2, 'd': 0}
 E       assert {'a': 0, 'b': 1, 'c': 0} == {'a': 0, 'b': 2, 'd': 0}
 E         Omitting 1 identical items, use -v to show
 E         Differing items:
 E         {'b': 1} != {'b': 2}
 E         Left contains more items:
 E         {'c': 0}
 E         Right contains more items:
 E         {'d': 0}
 E         Use -v to get the full diff
 
 test_report.py:8: AssertionError
F test_report.py::TestCase::()::test_eq_list
 self = <test_report.TestCase object at 0x10a87fdd0>
 
     def test_eq_list(self):
 >       assert [0, 1, 2] == [0, 1, 3]
 E       assert [0, 1, 2] == [0, 1, 3]
 E         At index 2 diff: 2 != 3
 E         Use -v to get the full diff
 
 test_report.py:11: AssertionError
F test_report.py::TestCase::()::test_eq_longer_list
 self = <test_report.TestCase object at 0x10a8a7150>
 
     def test_eq_longer_list(self):
 >       assert [1,2] == [1,2,3]
 E       assert [1, 2] == [1, 2, 3]
 E         Right contains more items, first extra item: 3
 E         Use -v to get the full diff
 
 test_report.py:14: AssertionError
